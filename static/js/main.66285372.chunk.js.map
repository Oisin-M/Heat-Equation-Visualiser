{"version":3,"sources":["HeatEqnVisualiser/animations.js","HeatEqnVisualiser/HeatEquationVisualiser.jsx","App.js","serviceWorker.js","index.js"],"names":["getAnimations","array","times","dt","b","anims","grid","row_vals","arr","i","j","length","row","k","push","CornerSolver","XBoundarySolver","YBoundarySolver","InnerSolver","SolveHeatEqn","r","c","u_jk","u_jk1","u_jk_1","u_j1k","ROWS","window","innerHeight","COLUMNS","innerWidth","colors","require","colormap","nshades","format","alpha","HeatEquationVisualiser","props","state","this","resetgrid","min","max","Math","random","setState","document","getElementById","innerHTML","animations","points","getElementsByClassName","timer","resetbutton","simulatebutton","disabled","setTimeout","toFixed","points_index","value","style","backgroundColor","round","ANIMATIONS","Container","fluid","className","id","map","idrow","Row","key","point","idx","onClick","Visualise","href","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.66285372.chunk.js","sourcesContent":["export function getAnimations(array, times, dt, b) {\r\n  const animations = [];\r\n  return SolveHeatEqn(array, animations, times, dt, b);\r\n}\r\n\r\nfunction SolveHeatEqn(array, anims, times, dt, b) {\r\n  var anims = [];\r\n  var grid = [];\r\n  var row_vals = [];\r\n  var arr=array;\r\n\r\n  for (let i=0; i<times; i++) {\r\n    grid=[];\r\n    for (let j=0; j<arr.length; j++) {\r\n      var row = arr[j];\r\n      row_vals=[];\r\n      for (let k=0; k<row.length; k++) {\r\n        var temp = row[k];\r\n        //stuff\r\n        if ((j==0 && k==0) || (j==0 && k==row.length-1) || (j==arr.length-1 && k==0) || (j==arr.length-1 && k==row.length-1)) {\r\n          row_vals.push(CornerSolver(arr, j, k, dt, b));\r\n        }\r\n        else {\r\n          if ((j==0) || (j==arr.length-1)) {\r\n            row_vals.push(XBoundarySolver(arr, j, k, dt, b));\r\n          }\r\n          else {\r\n            if ((k==0) || (k==row.length-1)) {\r\n              row_vals.push(YBoundarySolver(arr, j, k, dt, b));\r\n            }\r\n            else {\r\n              row_vals.push(InnerSolver(arr, j, k, dt, b));\r\n            }\r\n          }\r\n        }\r\n\r\n\r\n      }\r\n      grid.push(row_vals);\r\n    }\r\n    anims.push(grid);\r\n    arr=grid;\r\n  }\r\n  return anims;\r\n}\r\n\r\nfunction CornerSolver(array, r, c, dt, b) {\r\n  const u_jk = array[r][c];\r\n  var u_jEk = 0;\r\n  var u_jkE = 0;\r\n\r\n  if (r==0) {\r\n    u_jEk = array[r+1][c];\r\n  }\r\n  else {\r\n    u_jEk = array[r-1][c];\r\n  }\r\n  if (c==0) {\r\n    u_jkE = array[r][c+1];\r\n  }\r\n  else {\r\n    u_jkE = array[r][c-1];\r\n  }\r\n\r\n  const x_contrib = 2*u_jEk - 2*u_jk;\r\n  const y_contrib = 2*u_jkE - 2*u_jk;\r\n  const du_dt=b*(x_contrib+y_contrib);\r\n  return u_jk+du_dt*dt;\r\n}\r\n\r\nfunction XBoundarySolver(array, r, c, dt, b) {\r\n  const u_jk = array[r][c];\r\n  var u_jEk = 0;\r\n  const u_jk1 = array[r][c+1];\r\n  const u_jk_1 = array[r][c-1];\r\n\r\n  if (r==0) {\r\n    u_jEk = array[r+1][c];\r\n  }\r\n  else {\r\n    u_jEk = array[r-1][c];\r\n  }\r\n\r\n  const x_contrib = 2*u_jEk - 2*u_jk;\r\n  const y_contrib = u_jk1 - 2*u_jk + u_jk_1;\r\n  const du_dt=b*(x_contrib+y_contrib);\r\n  return u_jk+du_dt*dt;\r\n}\r\n\r\nfunction YBoundarySolver(array, r, c, dt, b) {\r\n  const u_j1k = array[r+1][c];\r\n  const u_jk = array[r][c];\r\n  const u_j_1k = array[r-1][c];\r\n  var u_jkE = 0;\r\n\r\n  if (c==0) {\r\n    u_jkE = array[r][c+1];\r\n  }\r\n  else {\r\n    u_jkE = array[r][c-1];\r\n  }\r\n\r\n  const x_contrib = u_j1k - 2*u_jk + u_j_1k;\r\n  const y_contrib = 2*u_jkE - 2*u_jk;\r\n  const du_dt=b*(x_contrib+y_contrib);\r\n  return u_jk+du_dt*dt;\r\n}\r\n\r\nfunction InnerSolver(array, r, c, dt, b) {\r\n  const u_j1k = array[r+1][c];\r\n  const u_jk = array[r][c];\r\n  const u_j_1k = array[r-1][c];\r\n  const u_jk1 = array[r][c+1];\r\n  const u_jk_1 = array[r][c-1];\r\n\r\n  const x_contrib = u_j1k - 2*u_jk + u_j_1k;\r\n  const y_contrib = u_jk1 - 2*u_jk + u_jk_1;\r\n  const du_dt=b*(x_contrib+y_contrib);\r\n  return u_jk+du_dt*dt;\r\n}\r\n","import React from 'react';\r\nimport {Container, Row} from 'react-bootstrap';\r\nimport './HeatEquationVisualiser.css';\r\nimport {getAnimations} from './animations.js';\r\n\r\nconst ROWS = (window.innerHeight-150)/30;\r\nconst COLUMNS = (window.innerWidth)/30;\r\nconst ANIMATION_SPEED_MS = 200;\r\nconst ANIMATIONS = 50;\r\nconst DT=0.1;\r\nconst BETA=1;\r\n\r\nlet colormap = require('colormap');\r\nlet colors = colormap({\r\n    colormap: 'hot',\r\n    nshades: 255,\r\n    format: 'hex',\r\n    alpha: 1\r\n})\r\n\r\nexport default class HeatEquationVisualiser extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      grid: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetgrid();\r\n  }\r\n\r\n  resetgrid() {\r\n  var grid = [];\r\n  var row = [];\r\n\r\n    for (let i = 0; i < ROWS; i++) {\r\n      row=[];\r\n      for (let j = 0; j < COLUMNS; j++) {\r\n        row.push(randomFromInterval(0, 200));\r\n      }\r\n      grid.push(row);\r\n    }\r\n  this.setState({grid});\r\n  document.getElementById('timer').innerHTML=\"Time: 0.00s\";\r\n  }\r\n\r\n  Visualise() {\r\n    const animations = getAnimations(this.state.grid, ANIMATIONS, DT, BETA);\r\n    const points = document.getElementsByClassName('point');\r\n    const timer = document.getElementById('timer');\r\n    const resetbutton = document.getElementById('resetbutton');\r\n    const simulatebutton = document.getElementById('simulatebutton');\r\n    resetbutton.disabled=true;\r\n    simulatebutton.disabled=true;\r\n    for (let i = 0; i < animations.length; i++) {\r\n      setTimeout(() => {\r\n      timer.innerHTML = \"Time: \"+(i*ANIMATION_SPEED_MS/1000).toFixed(2)+\"s\";\r\n      for (let j = 0; j<ROWS; j++) {\r\n          for (let k=0; k<COLUMNS; k++){\r\n            var points_index = j*COLUMNS + k;\r\n            var value = animations[i][j][k];\r\n            var pointstyle=points[points_index].style;\r\n            pointstyle.backgroundColor=colors[Math.round(value)];\r\n          }\r\n        }\r\n    }, (i*ANIMATION_SPEED_MS));\r\n  }\r\n\r\n  setTimeout(() => {\r\n  timer.innerHTML = \"COMPLETED\";\r\n  resetbutton.disabled=false;\r\n  simulatebutton.disabled=false;\r\n  this.setState({grid: animations[animations.length-1]})\r\n  }, ANIMATIONS*ANIMATION_SPEED_MS);\r\n  }\r\n\r\n  render() {\r\n    const {grid} = this.state;\r\n    return (\r\n      <Container fluid={true}>\r\n\r\n        <div className=\"margintop\">\r\n        <h1 className=\"heading\">2D Heat Equation with Insulating Boundary Conditions</h1>\r\n        </div>\r\n\r\n        <div className=\"timerdiv\"><p className=\"timerp\" id=\"timer\">Time: 0.00s</p></div>\r\n\r\n        <Container fluid={true}>\r\n        <div className=\"grid\">\r\n          {grid.map((row, idrow) => (\r\n            <Row className=\"justify-content-center\" key={idrow}>\r\n              {row.map((point, idx) => (\r\n                <div\r\n                className=\"point\"\r\n                key={idx}\r\n                style={{\r\n                  backgroundColor: colors[Math.round(point)]\r\n                }}></div>\r\n              ))}\r\n            </Row>\r\n          ))}\r\n          </div>\r\n        </Container>\r\n        <button id=\"resetbutton\" onClick={() => this.resetgrid()}>Reset Grid</button>\r\n        <button id=\"simulatebutton\" onClick={() => this.Visualise()}>Simulate for 10 Seconds</button>\r\n\r\n        <div className=\"margintop\">\r\n        <h3 className=\"more\">Find out more <a href=\"#\">here</a></h3>\r\n        </div>\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nfunction randomFromInterval(min, max) {\r\n  // min and max included\r\n  return Math.random()*(max-min)+min;\r\n}\r\n","import React from 'react';\nimport HeatEquationVisualiser from './HeatEqnVisualiser/HeatEquationVisualiser';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <HeatEquationVisualiser></HeatEquationVisualiser>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}